ªU
eC:\Users\galopez\source\repos\ProyectoFinalSeguridad\ProyectoFinalSeguridad\Consultas\Validaciones.cs
	namespace 	"
ProyectoFinalSeguridad
  
.  !
	Consultas! *
{ 
public 

class 
Validaciones 
{ 
public 
string 
ValidarTarjeta $
($ %
string% +

TextoPlano, 6
)6 7
{ 	
Regex 
r 
= 
new 
Regex 
(  
$str  ,
), -
;- .
if 
( 
r 
. 
IsMatch 
( 

TextoPlano $
)$ %
)% &
{ 

TextoPlano 
= 

TextoPlano '
.' (
Replace( /
(/ 0

TextoPlano0 :
.: ;
	Substring; D
(D E
$numE F
,F G
$numH J
)J K
,K L
$strM \
)\ ]
;] ^
return 

TextoPlano !
;! "
} 
return 
$str )
;) *
} 	
public 
DTO 
. 
GeneradorLlaves "
ObtenerLlaves# 0
(0 1
)1 2
{ 	
DTO 
. 
GeneradorLlaves 
datos  %
=& '
new( +
DTO, /
./ 0
GeneradorLlaves0 ?
(? @
)@ A
;A B
using 
( 
Aes 
myAes 
= 
Aes "
." #
Create# )
() *
)* +
)+ ,
{   
datos"" 
."" 
Key"" 
="" 
myAes"" !
.""! "
Key""" %
;""% &
datos## 
.## 
Iv## 
=## 
myAes##  
.##  !
IV##! #
;### $
}%% 
return&& 
datos&& 
;&& 
}'' 	
public)) 
byte)) 
[)) 
])) 
EncriptacionAES256)) (
())( )
DTO))) ,
.)), -
Encriptador))- 8
encriptador))9 D
)))D E
{** 	
if,, 
(,, 
encriptador,, 
.,, 
	PlainText,, %
==,,& (
null,,) -
||,,. 0
encriptador,,1 <
.,,< =
	PlainText,,= F
.,,F G
Length,,G M
<=,,N P
$num,,Q R
),,R S
throw-- 
new-- !
ArgumentNullException-- /
(--/ 0
$str--0 ;
)--; <
;--< =
if.. 
(.. 
encriptador.. 
... 
Key.. 
==..  "
null..# '
||..( *
encriptador..+ 6
...6 7
Key..7 :
...: ;
Length..; A
<=..B D
$num..E F
)..F G
throw// 
new// !
ArgumentNullException// /
(/// 0
$str//0 5
)//5 6
;//6 7
if00 
(00 
encriptador00 
.00 
IV00 
==00 !
null00" &
||00' )
encriptador00* 5
.005 6
IV006 8
.008 9
Length009 ?
<=00@ B
$num00C D
)00D E
throw11 
new11 !
ArgumentNullException11 /
(11/ 0
$str110 4
)114 5
;115 6
byte22 
[22 
]22 
	encrypted22 
;22 
using66 
(66 
Aes66 
aesAlg66 
=66 
Aes66  #
.66# $
Create66$ *
(66* +
)66+ ,
)66, -
{77 
aesAlg88 
.88 
Key88 
=88 
encriptador88 (
.88( )
Key88) ,
;88, -
aesAlg99 
.99 
IV99 
=99 
encriptador99 '
.99' (
IV99( *
;99* +
ICryptoTransform<<  
	encryptor<<! *
=<<+ ,
aesAlg<<- 3
.<<3 4
CreateEncryptor<<4 C
(<<C D
aesAlg<<D J
.<<J K
Key<<K N
,<<N O
aesAlg<<P V
.<<V W
IV<<W Y
)<<Y Z
;<<Z [
using?? 
(?? 
MemoryStream?? #
	msEncrypt??$ -
=??. /
new??0 3
MemoryStream??4 @
(??@ A
)??A B
)??B C
{@@ 
usingAA 
(AA 
CryptoStreamAA '
	csEncryptAA( 1
=AA2 3
newAA4 7
CryptoStreamAA8 D
(AAD E
	msEncryptAAE N
,AAN O
	encryptorAAP Y
,AAY Z
CryptoStreamModeAA[ k
.AAk l
WriteAAl q
)AAq r
)AAr s
{BB 
usingCC 
(CC 
StreamWriterCC +
	swEncryptCC, 5
=CC6 7
newCC8 ;
StreamWriterCC< H
(CCH I
	csEncryptCCI R
)CCR S
)CCS T
{DD 
	swEncryptFF %
.FF% &
WriteFF& +
(FF+ ,
encriptadorFF, 7
.FF7 8
	PlainTextFF8 A
)FFA B
;FFB C
}GG 
	encryptedHH !
=HH" #
	msEncryptHH$ -
.HH- .
ToArrayHH. 5
(HH5 6
)HH6 7
;HH7 8
}II 
}JJ 
}KK 
returnNN 
	encryptedNN 
;NN 
}OO 	
publicQQ 
stringQQ !
DesencriptacionAES256QQ +
(QQ+ ,
DTOQQ, /
.QQ/ 0
DesencriptadorQQ0 >
desencriptadorQQ? M
)QQM N
{RR 	
ifTT 
(TT 
desencriptadorTT 
.TT 

CipherTextTT )
==TT* ,
nullTT- 1
||TT2 4
desencriptadorTT5 C
.TTC D

CipherTextTTD N
.TTN O
LengthTTO U
<=TTV X
$numTTY Z
)TTZ [
throwUU 
newUU !
ArgumentNullExceptionUU /
(UU/ 0
$strUU0 <
)UU< =
;UU= >
ifVV 
(VV 
desencriptadorVV 
.VV 
KeyVV "
==VV# %
nullVV& *
||VV+ -
desencriptadorVV. <
.VV< =
KeyVV= @
.VV@ A
LengthVVA G
<=VVH J
$numVVK L
)VVL M
throwWW 
newWW !
ArgumentNullExceptionWW /
(WW/ 0
$strWW0 5
)WW5 6
;WW6 7
ifXX 
(XX 
desencriptadorXX 
.XX 
IVXX !
==XX" $
nullXX% )
||XX* ,
desencriptadorXX- ;
.XX; <
IVXX< >
.XX> ?
LengthXX? E
<=XXF H
$numXXI J
)XXJ K
throwYY 
newYY !
ArgumentNullExceptionYY /
(YY/ 0
$strYY0 4
)YY4 5
;YY5 6
string]] 
	plaintext]] 
=]] 
null]] #
;]]# $
usingaa 
(aa 
Aesaa 
aesAlgaa 
=aa 
Aesaa  #
.aa# $
Createaa$ *
(aa* +
)aa+ ,
)aa, -
{bb 
aesAlgcc 
.cc 
Keycc 
=cc 
desencriptadorcc +
.cc+ ,
Keycc, /
;cc/ 0
aesAlgdd 
.dd 
IVdd 
=dd 
desencriptadordd *
.dd* +
IVdd+ -
;dd- .
ICryptoTransformgg  
	decryptorgg! *
=gg+ ,
aesAlggg- 3
.gg3 4
CreateDecryptorgg4 C
(ggC D
aesAlgggD J
.ggJ K
KeyggK N
,ggN O
aesAlgggP V
.ggV W
IVggW Y
)ggY Z
;ggZ [
usingjj 
(jj 
MemoryStreamjj #
	msDecryptjj$ -
=jj. /
newjj0 3
MemoryStreamjj4 @
(jj@ A
desencriptadorjjA O
.jjO P

CipherTextjjP Z
)jjZ [
)jj[ \
{kk 
usingll 
(ll 
CryptoStreamll '
	csDecryptll( 1
=ll2 3
newll4 7
CryptoStreamll8 D
(llD E
	msDecryptllE N
,llN O
	decryptorllP Y
,llY Z
CryptoStreamModell[ k
.llk l
Readlll p
)llp q
)llq r
{mm 
usingnn 
(nn 
StreamReadernn +
	srDecryptnn, 5
=nn6 7
newnn8 ;
StreamReadernn< H
(nnH I
	csDecryptnnI R
)nnR S
)nnS T
{oo 
	plaintextss %
=ss& '
	srDecryptss( 1
.ss1 2
	ReadToEndss2 ;
(ss; <
)ss< =
;ss= >
}tt 
}uu 
}vv 
}ww 
returnxx 
	plaintextxx 
;xx 
}yy 	
publiczz 
bytezz 
[zz 
]zz 
Hashzz 
(zz 
stringzz !
CadenaTextozz" -
)zz- .
{{{ 	
byte|| 
[|| 
]|| 
	hashValue|| 
=|| 
null|| #
;||# $
using}} 
(}} 
SHA256}} 
mySHA256}} "
=}}# $
SHA256}}% +
.}}+ ,
Create}}, 2
(}}2 3
)}}3 4
)}}4 5
{~~ 
try 
{
ÄÄ 
	hashValue
ÅÅ 
=
ÅÅ 
mySHA256
ÅÅ  (
.
ÅÅ( )
ComputeHash
ÅÅ) 4
(
ÅÅ4 5
Encoding
ÅÅ5 =
.
ÅÅ= >
UTF8
ÅÅ> B
.
ÅÅB C
GetBytes
ÅÅC K
(
ÅÅK L
CadenaTexto
ÅÅL W
)
ÅÅW X
)
ÅÅX Y
;
ÅÅY Z
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
IOException
ÖÖ "
e
ÖÖ# $
)
ÖÖ$ %
{
ÜÜ 
Console
áá 
.
áá 
	WriteLine
áá %
(
áá% &
$"
áá& (
$str
áá( 7
{
áá7 8
e
áá8 9
.
áá9 :
Message
áá: A
}
ááA B
"
ááB C
)
ááC D
;
ááD E
}
àà 
catch
ââ 
(
ââ )
UnauthorizedAccessException
ââ 2
e
ââ3 4
)
ââ4 5
{
ää 
Console
ãã 
.
ãã 
	WriteLine
ãã %
(
ãã% &
$"
ãã& (
$str
ãã( :
{
ãã: ;
e
ãã; <
.
ãã< =
Message
ãã= D
}
ããD E
"
ããE F
)
ããF G
;
ããG H
}
åå 
return
éé 
	hashValue
éé  
;
éé  !
}
êê 
}
ëë 	
}
íí 
}ìì √
aC:\Users\galopez\source\repos\ProyectoFinalSeguridad\ProyectoFinalSeguridad\DTO\Desencriptador.cs
	namespace 	"
ProyectoFinalSeguridad
  
.  !
DTO! $
{ 
public 

class 
Desencriptador 
{		 
private

 
byte

 
[

 
]

 

cipherText

 !
;

! "
private 
byte 
[ 
] 
key 
; 
private 
byte 
[ 
] 
iV 
; 
public 
byte 
[ 
] 

CipherText  
{! "
get# &
=>' )

cipherText* 4
;4 5
set6 9
=>: <

cipherText= G
=H I
valueJ O
;O P
}Q R
public 
byte 
[ 
] 
Key 
{ 
get 
=>  "
key# &
;& '
set( +
=>, .
key/ 2
=3 4
value5 :
;: ;
}< =
public 
byte 
[ 
] 
IV 
{ 
get 
=> !
iV" $
;$ %
set& )
=>* ,
iV- /
=0 1
value2 7
;7 8
}9 :
} 
} Å
^C:\Users\galopez\source\repos\ProyectoFinalSeguridad\ProyectoFinalSeguridad\DTO\Encriptador.cs
	namespace 	"
ProyectoFinalSeguridad
  
.  !
DTO! $
{ 
public 

class 
Encriptador 
{		 
private

 
string

 
	plainText

  
;

  !
private 
byte 
[ 
] 
key 
; 
private 
byte 
[ 
] 
iV 
; 
public 
string 
	PlainText 
{  !
get" %
=>& (
	plainText) 2
;2 3
set4 7
=>8 :
	plainText; D
=E F
valueG L
;L M
}N O
public 
byte 
[ 
] 
Key 
{ 
get 
=>  "
key# &
;& '
set( +
=>, .
key/ 2
=3 4
value5 :
;: ;
}< =
public 
byte 
[ 
] 
IV 
{ 
get 
=> !
iV" $
;$ %
set& )
=>* ,
iV- /
=0 1
value2 7
;7 8
}9 :
} 
} ≠
bC:\Users\galopez\source\repos\ProyectoFinalSeguridad\ProyectoFinalSeguridad\DTO\GeneradorLlaves.cs
	namespace 	"
ProyectoFinalSeguridad
  
.  !
DTO! $
{ 
public 

class 
GeneradorLlaves  
{		 
private

 
byte

 
[

 
]

 
key

 
;

 
private 
byte 
[ 
] 
iv 
; 
public 
byte 
[ 
] 
Key 
{ 
get 
=>  "
key# &
;& '
set( +
=>, .
key/ 2
=3 4
value5 :
;: ;
}< =
public 
byte 
[ 
] 
Iv 
{ 
get 
=> !
iv" $
;$ %
set& )
=>* ,
iv- /
=0 1
value2 7
;7 8
}9 :
} 
} ë
fC:\Users\galopez\source\repos\ProyectoFinalSeguridad\ProyectoFinalSeguridad\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 1
)1 2
]2 3
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 1
)1 2
]2 3
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 3
)3 4
]4 5
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str D
)D E
]E F
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *á
_C:\Users\galopez\source\repos\ProyectoFinalSeguridad\ProyectoFinalSeguridad\WsSeguridad.asmx.cs
	namespace 	"
ProyectoFinalSeguridad
  
{		 
[ 

WebService 
( 
	Namespace 
= 
$str 1
)1 2
]2 3
[ 
WebServiceBinding 
( 

ConformsTo !
=" #
WsiProfiles$ /
./ 0
BasicProfile1_10 ?
)? @
]@ A
[ 
System 
. 
ComponentModel 
. 
ToolboxItem &
(& '
false' ,
), -
]- .
public 

class 
WsSeguridad 
: 
System %
.% &
Web& )
.) *
Services* 2
.2 3

WebService3 =
{ 
[ 	
	WebMethod	 
] 
public 
byte 
[ 
] 
	Encriptar 
(  
DTO  #
.# $
Encriptador$ /
encriptador0 ;
); <
{ 	
Validaciones 
validaciones %
=& '
new( +
Validaciones, 8
(8 9
)9 :
;: ;
return 
validaciones 
.  
EncriptacionAES256  2
(2 3
encriptador3 >
)> ?
;? @
} 	
[ 	
	WebMethod	 
] 
public 
string 
Desencriptar "
(" #
DTO# &
.& '
Desencriptador' 5
desencriptador6 D
)D E
{ 	
Validaciones 
validaciones %
=& '
new( +
Validaciones, 8
(8 9
)9 :
;: ;
return 
validaciones 
.  !
DesencriptacionAES256  5
(5 6
desencriptador6 D
)D E
;E F
}   	
[!! 	
	WebMethod!!	 
]!! 
public"" 
byte"" 
["" 
]"" 
Hashing"" 
("" 
string"" $
CadenaTexto""% 0
)""0 1
{## 	
Validaciones$$ 
validaciones$$ %
=$$& '
new$$( +
Validaciones$$, 8
($$8 9
)$$9 :
;$$: ;
return%% 
validaciones%% 
.%%  
Hash%%  $
(%%$ %
CadenaTexto%%% 0
)%%0 1
;%%1 2
}&& 	
['' 	
	WebMethod''	 
]'' 
public(( 
DTO(( 
.(( 
GeneradorLlaves(( "
ObtenerLlaves((# 0
(((0 1
)((1 2
{)) 	
Validaciones** 
validaciones** %
=**& '
new**( +
Validaciones**, 8
(**8 9
)**9 :
;**: ;
return++ 
validaciones++ 
.++  
ObtenerLlaves++  -
(++- .
)++. /
;++/ 0
},, 	
[-- 	
	WebMethod--	 
]-- 
public.. 
string.. 
Tarjetas.. 
(.. 
string.. %
Tarjeta..& -
)..- .
{// 	
Validaciones00 
validaciones00 %
=00& '
new00( +
Validaciones00, 8
(008 9
)009 :
;00: ;
return11 
validaciones11 
.11  
ValidarTarjeta11  .
(11. /
Tarjeta11/ 6
)116 7
;117 8
}22 	
}33 
}44 